package com.medica.controller;

import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;

import org.springframework.web.bind.annotation.CrossOrigin;

import com.medica.model.Tbl_Especialidades;
import com.medica.model.Tbl_Medico;
import com.medica.service.imp.ClassEspecialidadimp;

@Path("/Especialidad")
@CrossOrigin(origins = "http://localhost:4200")
public class EspecialidadServiceREST {

	ClassEspecialidadimp crud = new ClassEspecialidadimp();
	
	@GET
	@Path("/ListadoEspecialidad")
	@Produces(MediaType.APPLICATION_JSON)
	public Response ListadoMedico(){
		List<Tbl_Especialidades> listar = crud.ListarEspecialidades();
		return Response.ok(listar).build();
	}
	
	@POST
	@Path("/RegistrarEspecialidad")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Response CrearEspecialidad(Tbl_Especialidades espe){
		crud.RegistrarEspecialidad(espe);
		return Response.status(Status.CREATED).build();
	}
	
	@GET
	@Path("/ListadoEspecialidad/{id}")
	@Produces(MediaType.APPLICATION_JSON)
	public Response BuscarEspecialidadPorEspecialidad(@PathParam("nomespe") String nomespe) {
	    Tbl_Especialidades espe = new Tbl_Especialidades();
	    espe.setEspecialidad(nomespe);;
	    Tbl_Especialidades resultado = crud.buscarEspecialidadNombre(espe);
	    if (resultado.getEspecialidad() == null) { // si no encontrÃ³ registro
	    	return Response.status(Status.NOT_FOUND)
	    			.entity("{\"mensaje\":\"No se encontrÃ³ Especialidad :" + nomespe+ "\"}")
	    			.build();
	    }

	    return Response.ok(resultado).build();
	    }

	 	// ACTUALIZAR MÃ‰DICO
	    @PUT
	    @Path("/ActualizarEspecialidad")
	    @Consumes(MediaType.APPLICATION_JSON)
	    @Produces(MediaType.APPLICATION_JSON)
	    public Response ActualizarMedico(Tbl_Especialidades espe) {
	        crud.ActualizarMedico(medico);
	        return Response.ok(medico).build();
	    }

	    // ðŸ”¹ ELIMINAR MÃ‰DICO
	    @DELETE
	    @Path("/EliminarMedico/{id}")
	    @Produces(MediaType.APPLICATION_JSON)
	    public Response EliminarMedico(@PathParam("id") int id) {
	        Tbl_Medico medico = new Tbl_Medico();
	        medico.setCod_doc(id);
	        crud.EliminarMedico(medico);
	        return Response.ok().build();
	    }
}
