package com.medica.service.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jca.cci.connection.ConnectionSpecConnectionFactoryAdapter;

import com.medica.ConnectionSql.ConectarBD;
import com.medica.model.Tbl_Medico;
import com.medica.service.IMedicoService;

@Service
public class ClassMedicoImp implements IMedicoService{

	
	@Override
	public List<Tbl_Medico> ListarMedico() {
		String sql = "SELECT m.cod_coc, m.nomDoctor, e.nomEspecialidad, m.nacionalidad, m.dni, m.fecha, m.correo "
                + "FROM Tbl_Medico m "
                + "INNER JOIN Tbl_Especialidad e ON m.especialidad = e.idEspecialidad";
		List<Tbl_Medico> listar = new ArrayList<Tbl_Medico>();
		
		
		try (Connection cn = ConectarBD.getConexion();
	             PreparedStatement ps = cn.prepareStatement(sql);
	             ResultSet rs = ps.executeQuery()) {
			
			while(rs.next()){
				Tbl_Medico me = new Tbl_Medico();
				me.setCod_doc(rs.getInt(1));
				me.setNomDoctor(rs.getString(2));
				me.setIdEspecialidad(rs.getInt(3));
	            me.setEspecialidadNombre(rs.getString(4));
	            me.setNacionalidad(rs.getString(5));
	            me.setDni(rs.getString(6));
	            me.setFecha(rs.getString(7));
	            me.setCorreo(rs.getString(8));
				
				listar.add(me);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	    return listar;
	}

	@Override
	public void RegistrarMedico(Tbl_Medico medico) {
		String sqlInsert= "insert into Tbl_Medico values(null,?,?,?,?,?,?)";
		PreparedStatement ps = null;
		try {
			ps = ConectarBD.getConexion().prepareStatement(sqlInsert);
			ps.setString(1, medico.getNomDoctor());
			ps.setInt(2, medico.getIdEspecialidad());
			ps.setString(3, medico.getNacionalidad());
			ps.setString(4, medico.getDni());
			ps.setString(5,medico.getFecha());
			ps.setString(6, medico.getCorreo());
		int z = ps.executeUpdate();
		if(z>0){
			System.out.print("Dato registrado en la BD!!!!!");
		}
			
		} catch (SQLException e) {
			System.out.print(e.getMessage());
		}
	}

	@Override
	public void EliminarMedico(Tbl_Medico medico) {
		String sqldelete = "delete from Tbl_Medico where cod_coc=?";
		PreparedStatement ps = null;
		try {
			ps=ConectarBD.getConexion().prepareStatement(sqldelete);
			ps.setInt(1, medico.getCod_doc());
			int z = ps.executeUpdate();
			if(z>0){
				System.out.println("Usuario con codigo "+medico.getCod_doc()+" de la BD!!!!!!");
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	@Override
	public Tbl_Medico buscarMedicoId(Tbl_Medico medico) {
				String sqlbuscar = "SELECT * FROM Tbl_Medico where cod_coc = ?";
				PreparedStatement ps = null;
				ResultSet rs = null;
				Tbl_Medico buscarMedico = new Tbl_Medico();
				try {
					ps = ConectarBD.getConexion().prepareStatement(sqlbuscar);
					ps.setInt(1, medico.getCod_doc());
					rs = ps.executeQuery();
					if (rs.next()) {
						buscarMedico.setCod_doc(rs.getInt(1));
						buscarMedico.setNomDoctor(rs.getString(2));
						buscarMedico.setIdEspecialidad(rs.getInt(3));
						buscarMedico.setNacionalidad(rs.getString(4));
						buscarMedico.setDni(rs.getString(5));
						buscarMedico.setFecha(rs.getString(6));
						buscarMedico.setCorreo(rs.getString(7));
					}// fin del if
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				//retornamos el autor buscado
				return buscarMedico;
	}
	
	@Override
	public void ActualizarMedico(Tbl_Medico medico) {
		String sqlinsert="update Tbl_Medico set nomDoctor=?, especialidad=?, nacionalidad=?, dni=?, fecha=?, correo=? where cod_coc=?";
		PreparedStatement ps = null;
		try {
			ps=ConectarBD.getConexion().prepareStatement(sqlinsert);
			ps.setString(1, medico.getNomDoctor());
			ps.setInt(2, medico.getEspecialidad());
			ps.setString(3, medico.getNacionalidad());
			ps.setString(4, medico.getDni());
			ps.setString(5, medico.getFecha());
			ps.setString(6, medico.getCorreo());
			ps.setInt(7, medico.getCod_doc());
			int z = ps.executeUpdate();
			if(z>0){
				System.out.println("Datos Actualizados del codigo "+medico.getCod_doc()+" Correctamente!!!!!!!!!!!!");
			}// fin de la condicion
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}

}
